---
swagger: "2.0"
info:
  description: "## TMF API Reference : TMF 672 - User Roles And Permissions\n\nThis\
    \ API is used to manage the user account with which the customer or staff can\
    \ log-in and log-off the system and the permission for the user to enter or operate\
    \ the special information."
  version: "4.0.1"
  title: "User Roles And Permissions"
host: "serverRootserverRoot:8080"
basePath: "/userrolepermission/v4/"
tags:
- name: "permission"
- name: "userRole"
- name: "notification listeners (client side)"
- name: "events subscription"
schemes:
- "https"
consumes:
- "application/json;charset=utf-8"
produces:
- "application/json;charset=utf-8"
paths:
  /permission:
    get:
      tags:
      - "permission"
      summary: "List or find Permission objects"
      description: "This operation list or find Permission entities"
      operationId: "listPermission"
      parameters:
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to be provided in response"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "Requested index for start of resources to be provided in response"
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Requested number of resources to be provided in response"
        required: false
        type: "integer"
      responses:
        200:
          description: "Success"
          headers:
            X-Result-Count:
              type: "integer"
              description: "Actual number of items returned in the response body"
            X-Total-Count:
              type: "integer"
              description: "Total number of items matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Permission"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Permission"
    post:
      tags:
      - "permission"
      summary: "Creates a Permission"
      description: "This operation creates a Permission entity."
      operationId: "createPermission"
      parameters:
      - in: "body"
        name: "permission"
        description: "The Permission to be created"
        required: true
        schema:
          $ref: "#/definitions/Permission_Create"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/Permission"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Permission"
  /permission/{id}:
    get:
      tags:
      - "permission"
      summary: "Retrieves a Permission by ID"
      description: "This operation retrieves a Permission entity. Attribute selection\
        \ is enabled for all first level attributes."
      operationId: "retrievePermission"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the Permission"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to provide in response"
        required: false
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Permission"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Permission"
    patch:
      tags:
      - "permission"
      summary: "Updates partially a Permission"
      description: "This operation updates partially a Permission entity."
      operationId: "patchPermission"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the Permission"
        required: true
        type: "string"
      - in: "body"
        name: "permission"
        description: "The Permission to be updated"
        required: true
        schema:
          $ref: "#/definitions/Permission_Update"
      responses:
        200:
          description: "Updated"
          schema:
            $ref: "#/definitions/Permission"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Permission"
  /userRole:
    get:
      tags:
      - "userRole"
      summary: "List or find UserRole objects"
      description: "This operation list or find UserRole entities"
      operationId: "listUserRole"
      parameters:
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to be provided in response"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "Requested index for start of resources to be provided in response"
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Requested number of resources to be provided in response"
        required: false
        type: "integer"
      responses:
        200:
          description: "Success"
          headers:
            X-Result-Count:
              type: "integer"
              description: "Actual number of items returned in the response body"
            X-Total-Count:
              type: "integer"
              description: "Total number of items matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/UserRole"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "UserRole"
    post:
      tags:
      - "userRole"
      summary: "Creates a UserRole"
      description: "This operation creates a UserRole entity."
      operationId: "createUserRole"
      parameters:
      - in: "body"
        name: "userRole"
        description: "The UserRole to be created"
        required: true
        schema:
          $ref: "#/definitions/UserRole_Create"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/UserRole"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "UserRole"
  /userRole/{id}:
    get:
      tags:
      - "userRole"
      summary: "Retrieves a UserRole by ID"
      description: "This operation retrieves a UserRole entity. Attribute selection\
        \ is enabled for all first level attributes."
      operationId: "retrieveUserRole"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the UserRole"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to provide in response"
        required: false
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/UserRole"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "UserRole"
    patch:
      tags:
      - "userRole"
      summary: "Updates partially a UserRole"
      description: "This operation updates partially a UserRole entity."
      operationId: "patchUserRole"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the UserRole"
        required: true
        type: "string"
      - in: "body"
        name: "userRole"
        description: "The UserRole to be updated"
        required: true
        schema:
          $ref: "#/definitions/UserRole_Update"
      responses:
        200:
          description: "Updated"
          schema:
            $ref: "#/definitions/UserRole"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "UserRole"
  /hub:
    post:
      tags:
      - "events subscription"
      summary: "Register a listener"
      description: "Sets the communication endpoint address the service instance must\
        \ use to deliver information about its health state, execution state, failures\
        \ and metrics."
      operationId: "registerListener"
      parameters:
      - in: "body"
        name: "data"
        description: "Data containing the callback endpoint to deliver the information"
        required: true
        schema:
          $ref: "#/definitions/EventSubscriptionInput"
      responses:
        201:
          description: "Subscribed"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EventsSubscription"
  /hub/{id}:
    delete:
      tags:
      - "events subscription"
      summary: "Unregister a listener"
      description: "Resets the communication endpoint address the service instance\
        \ must use to deliver information about its health state, execution state,\
        \ failures and metrics."
      operationId: "unregisterListener"
      parameters:
      - name: "id"
        in: "path"
        description: "The id of the registered listener"
        required: true
        type: "string"
      responses:
        204:
          description: "Deleted"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method not allowed"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EventsSubscription"
  /listener/permissionCreateEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity PermissionCreateEvent"
      description: "Example of a client listener for receiving the notification PermissionCreateEvent"
      operationId: "listenToPermissionCreateEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/PermissionCreateEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/permissionAttributeValueChangeEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity PermissionAttributeValueChangeEvent"
      description: "Example of a client listener for receiving the notification PermissionAttributeValueChangeEvent"
      operationId: "listenToPermissionAttributeValueChangeEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/PermissionAttributeValueChangeEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/permissionStateChangeEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity PermissionStateChangeEvent"
      description: "Example of a client listener for receiving the notification PermissionStateChangeEvent"
      operationId: "listenToPermissionStateChangeEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/PermissionStateChangeEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/permissionDeleteEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity PermissionDeleteEvent"
      description: "Example of a client listener for receiving the notification PermissionDeleteEvent"
      operationId: "listenToPermissionDeleteEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/PermissionDeleteEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/userRoleCreateEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity UserRoleCreateEvent"
      description: "Example of a client listener for receiving the notification UserRoleCreateEvent"
      operationId: "listenToUserRoleCreateEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/UserRoleCreateEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/userRoleAttributeValueChangeEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity UserRoleAttributeValueChangeEvent"
      description: "Example of a client listener for receiving the notification UserRoleAttributeValueChangeEvent"
      operationId: "listenToUserRoleAttributeValueChangeEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/UserRoleAttributeValueChangeEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/userRoleStateChangeEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity UserRoleStateChangeEvent"
      description: "Example of a client listener for receiving the notification UserRoleStateChangeEvent"
      operationId: "listenToUserRoleStateChangeEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/UserRoleStateChangeEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/userRoleDeleteEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity UserRoleDeleteEvent"
      description: "Example of a client listener for receiving the notification UserRoleDeleteEvent"
      operationId: "listenToUserRoleDeleteEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/UserRoleDeleteEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
definitions:
  AssetUserRole:
    type: "object"
    required:
    - "manageableAsset"
    - "userRole"
    properties:
      manageableAsset:
        $ref: "#/definitions/EntityRef"
      userRole:
        $ref: "#/definitions/UserRoleRef"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "The AssetUserRole is the detailed information concerning an individual\
      \ user role"
    example:
      manageableAsset:
        '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      '@baseType': "@baseType"
      '@type': "@type"
      userRole:
        '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
  Entitlement:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Identifier of the entitlement."
      action:
        type: "string"
        description: "Level of access granted as part of the permission."
      function:
        type: "string"
        description: "Specific function that can be managed over a given asset."
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "An Entitlement defines access levels to operate over a given function\
      \ that can be included in an asset."
    example:
      '@baseType': "@baseType"
      '@type': "@type"
      function: "function"
      action: "action"
      id: "id"
      '@schemaLocation': "http://example.com/aeiou"
  EntityRef:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
        description: "Unique identifier of a related entity."
      href:
        type: "string"
        description: "Reference of the related entity."
      name:
        type: "string"
        description: "Name of the related entity."
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "Entity reference schema to be use for all entityRef class."
    example:
      '@referredType': "@referredType"
      '@baseType': "@baseType"
      '@type': "@type"
      name: "name"
      id: "id"
      href: "href"
      '@schemaLocation': "http://example.com/aeiou"
  Permission:
    type: "object"
    required:
    - "user"
    - "validFor"
    properties:
      id:
        type: "string"
        description: "Unique identifier of the permission"
      href:
        type: "string"
        description: "Hypertext Reference of the permission"
      creationDate:
        type: "string"
        format: "date-time"
        description: "Date when the payment was performed"
      description:
        type: "string"
        description: "Text describing the contents of the payment"
      assetUserRole:
        type: "array"
        items:
          $ref: "#/definitions/AssetUserRole"
      granter:
        $ref: "#/definitions/RelatedParty"
      privilege:
        type: "array"
        items:
          $ref: "#/definitions/Privilege"
      user:
        $ref: "#/definitions/RelatedParty"
      validFor:
        description: "The period for which the permission is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "The Permission resource represents the entitlement given by an individual\
      \ (granter) to another individual (user) to get access to a set of his owned\
      \ manageable assets. One single permission resource can hold information referring\
      \ to privileges granted for multiple manageable assets."
    example:
      assetUserRole:
      - manageableAsset:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        '@baseType': "@baseType"
        '@type': "@type"
        userRole:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      - manageableAsset:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        '@baseType': "@baseType"
        '@type': "@type"
        userRole:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      '@baseType': "@baseType"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        endDateTime: "1985-04-12T23:20:50.52Z"
      '@type': "@type"
      description: "description"
      id: "id"
      href: "href"
      privilege:
      - manageableAsset:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        '@baseType': "@baseType"
        '@type': "@type"
        function: "function"
        action: "action"
        id: "id"
        '@schemaLocation': "http://example.com/aeiou"
      - manageableAsset:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        '@baseType': "@baseType"
        '@type': "@type"
        function: "function"
        action: "action"
        id: "id"
        '@schemaLocation': "http://example.com/aeiou"
      creationDate: "2000-01-23T04:56:07.000+00:00"
      '@schemaLocation': "http://example.com/aeiou"
      granter:
        '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      user:
        '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
  Permission_Create:
    type: "object"
    required:
    - "user"
    - "validFor"
    properties:
      description:
        type: "string"
        description: "Text describing the contents of the payment"
      assetUserRole:
        type: "array"
        items:
          $ref: "#/definitions/AssetUserRole"
      granter:
        $ref: "#/definitions/RelatedParty"
      privilege:
        type: "array"
        items:
          $ref: "#/definitions/Privilege"
      user:
        $ref: "#/definitions/RelatedParty"
      validFor:
        description: "The period for which the permission is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "The Permission resource represents the entitlement given by an individual\
      \ (granter) to another individual (user) to get access to a set of his owned\
      \ manageable assets. One single permission resource can hold information referring\
      \ to privileges granted for multiple manageable assets.\nSkipped properties:\
      \ id,href,creationDate"
    example:
      assetUserRole:
      - manageableAsset:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        '@baseType': "@baseType"
        '@type': "@type"
        userRole:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      - manageableAsset:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        '@baseType': "@baseType"
        '@type': "@type"
        userRole:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      '@baseType': "@baseType"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        endDateTime: "1985-04-12T23:20:50.52Z"
      '@type': "@type"
      description: "description"
      privilege:
      - manageableAsset:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        '@baseType': "@baseType"
        '@type': "@type"
        function: "function"
        action: "action"
        id: "id"
        '@schemaLocation': "http://example.com/aeiou"
      - manageableAsset:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        '@baseType': "@baseType"
        '@type': "@type"
        function: "function"
        action: "action"
        id: "id"
        '@schemaLocation': "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
      granter:
        '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      user:
        '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
  Permission_Update:
    type: "object"
    required:
    - "user"
    - "validFor"
    properties:
      description:
        type: "string"
        description: "Text describing the contents of the payment"
      assetUserRole:
        type: "array"
        items:
          $ref: "#/definitions/AssetUserRole"
      granter:
        $ref: "#/definitions/RelatedParty"
      privilege:
        type: "array"
        items:
          $ref: "#/definitions/Privilege"
      user:
        $ref: "#/definitions/RelatedParty"
      validFor:
        description: "The period for which the permission is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "The Permission resource represents the entitlement given by an individual\
      \ (granter) to another individual (user) to get access to a set of his owned\
      \ manageable assets. One single permission resource can hold information referring\
      \ to privileges granted for multiple manageable assets.\nSkipped properties:\
      \ id,href,creationDate"
    example:
      assetUserRole:
      - manageableAsset:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        '@baseType': "@baseType"
        '@type': "@type"
        userRole:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      - manageableAsset:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        '@baseType': "@baseType"
        '@type': "@type"
        userRole:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      '@baseType': "@baseType"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        endDateTime: "1985-04-12T23:20:50.52Z"
      '@type': "@type"
      description: "description"
      privilege:
      - manageableAsset:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        '@baseType': "@baseType"
        '@type': "@type"
        function: "function"
        action: "action"
        id: "id"
        '@schemaLocation': "http://example.com/aeiou"
      - manageableAsset:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        '@baseType': "@baseType"
        '@type': "@type"
        function: "function"
        action: "action"
        id: "id"
        '@schemaLocation': "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
      granter:
        '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      user:
        '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
  Privilege:
    type: "object"
    required:
    - "action"
    - "function"
    - "manageableAsset"
    properties:
      id:
        type: "string"
        description: "Identifier of the privilege."
      action:
        type: "string"
        description: "Level of access granted as part of the permission."
      function:
        type: "string"
        description: "Specific function that can be managed over a given asset."
      manageableAsset:
        $ref: "#/definitions/EntityRef"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "A Privilege is a detailed information concerning an individual access\
      \ entitlement."
    example:
      manageableAsset:
        '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      '@baseType': "@baseType"
      '@type': "@type"
      function: "function"
      action: "action"
      id: "id"
      '@schemaLocation': "http://example.com/aeiou"
  RelatedParty:
    type: "object"
    required:
    - "@referredType"
    - "id"
    properties:
      id:
        type: "string"
        description: "Unique identifier of a related entity."
      href:
        type: "string"
        description: "Reference of the related entity."
      name:
        type: "string"
        description: "Name of the related entity."
      role:
        type: "string"
        description: "Role played by the related party"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "Related Entity reference. A related party defines party or party\
      \ role linked to a specific entity."
    example:
      '@referredType': "@referredType"
      role: "role"
      '@baseType': "@baseType"
      '@type': "@type"
      name: "name"
      id: "id"
      href: "href"
      '@schemaLocation': "http://example.com/aeiou"
  TimePeriod:
    type: "object"
    properties:
      endDateTime:
        type: "string"
        format: "date-time"
        example: "1985-04-12T23:20:50.52Z"
        description: "End of the time period, using IETC-RFC-3339 format"
      startDateTime:
        type: "string"
        format: "date-time"
        example: "1985-04-12T23:20:50.52Z"
        description: "Start of the time period, using IETC-RFC-3339 format. If you\
          \ define a start, you must also define an end"
    description: "A period of time, either as a deadline (endDateTime only) a startDateTime\
      \ only, or both"
    example:
      startDateTime: "1985-04-12T23:20:50.52Z"
      endDateTime: "1985-04-12T23:20:50.52Z"
  UserRole:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique identifier of the userRole"
      href:
        type: "string"
        description: "Unique URI used to access to the userRole resource"
      involvementRole:
        type: "string"
        description: "Indication of the part that a user plays in its involvement\
          \ with a manageable asset (product, service or resource)"
      entitlement:
        type: "array"
        items:
          $ref: "#/definitions/Entitlement"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "A UserRole defines access levels to operate over a given function\
      \ that can be included in an asset."
    example:
      involvementRole: "involvementRole"
      '@baseType': "@baseType"
      '@type': "@type"
      entitlement:
      - '@baseType': "@baseType"
        '@type': "@type"
        function: "function"
        action: "action"
        id: "id"
        '@schemaLocation': "http://example.com/aeiou"
      - '@baseType': "@baseType"
        '@type': "@type"
        function: "function"
        action: "action"
        id: "id"
        '@schemaLocation': "http://example.com/aeiou"
      id: "id"
      href: "href"
      '@schemaLocation': "http://example.com/aeiou"
  UserRole_Create:
    type: "object"
    required:
    - "entitlement"
    - "involvementRole"
    properties:
      involvementRole:
        type: "string"
        description: "Indication of the part that a user plays in its involvement\
          \ with a manageable asset (product, service or resource)"
      entitlement:
        type: "array"
        items:
          $ref: "#/definitions/Entitlement"
        minItems: 1
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "A UserRole defines access levels to operate over a given function\
      \ that can be included in an asset.\nSkipped properties: id,href"
    example:
      involvementRole: "involvementRole"
      '@baseType': "@baseType"
      '@type': "@type"
      entitlement:
      - '@baseType': "@baseType"
        '@type': "@type"
        function: "function"
        action: "action"
        id: "id"
        '@schemaLocation': "http://example.com/aeiou"
      - '@baseType': "@baseType"
        '@type': "@type"
        function: "function"
        action: "action"
        id: "id"
        '@schemaLocation': "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
  UserRole_Update:
    type: "object"
    properties:
      involvementRole:
        type: "string"
        description: "Indication of the part that a user plays in its involvement\
          \ with a manageable asset (product, service or resource)"
      entitlement:
        type: "array"
        items:
          $ref: "#/definitions/Entitlement"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "A UserRole defines access levels to operate over a given function\
      \ that can be included in an asset.\nSkipped properties: id,href"
    example:
      involvementRole: "involvementRole"
      '@baseType': "@baseType"
      '@type': "@type"
      entitlement:
      - '@baseType': "@baseType"
        '@type': "@type"
        function: "function"
        action: "action"
        id: "id"
        '@schemaLocation': "http://example.com/aeiou"
      - '@baseType': "@baseType"
        '@type': "@type"
        function: "function"
        action: "action"
        id: "id"
        '@schemaLocation': "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
  UserRoleRef:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
        description: "Unique identifier of the user role"
      href:
        type: "string"
        description: "Hypertext Reference of the user role."
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "A UserRoleRef is a detailed information concerning an individual\
      \ access entitlement."
    example:
      '@referredType': "@referredType"
      '@baseType': "@baseType"
      '@type': "@type"
      id: "id"
      href: "href"
      '@schemaLocation': "http://example.com/aeiou"
  EventSubscription:
    type: "object"
    required:
    - "callback"
    - "id"
    properties:
      id:
        type: "string"
        description: "Id of the listener"
      callback:
        type: "string"
        description: "The callback being registered."
      query:
        type: "string"
        description: "additional data to be passed"
    description: "Sets the communication endpoint address the service instance must\
      \ use to deliver notification information"
    example:
      query: "query"
      callback: "callback"
      id: "id"
  EventSubscriptionInput:
    type: "object"
    required:
    - "callback"
    properties:
      callback:
        type: "string"
        description: "The callback being registered."
      query:
        type: "string"
        description: "additional data to be passed"
    description: "Sets the communication endpoint address the service instance must\
      \ use to deliver notification information"
    example:
      query: "query"
      callback: "callback"
  PermissionCreateEvent:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Identifier of the Process flow"
      href:
        type: "string"
        description: "Reference of the ProcessFlow"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/PermissionCreateEventPayload"
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      id: "id"
      href: "href"
      eventType: "eventType"
      title: "title"
      priority: "priority"
      event:
        permission:
          assetUserRole:
          - manageableAsset:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            '@baseType': "@baseType"
            '@type': "@type"
            userRole:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          - manageableAsset:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            '@baseType': "@baseType"
            '@type': "@type"
            userRole:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "description"
          id: "id"
          href: "href"
          privilege:
          - manageableAsset:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            '@baseType': "@baseType"
            '@type': "@type"
            function: "function"
            action: "action"
            id: "id"
            '@schemaLocation': "http://example.com/aeiou"
          - manageableAsset:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            '@baseType': "@baseType"
            '@type': "@type"
            function: "function"
            action: "action"
            id: "id"
            '@schemaLocation': "http://example.com/aeiou"
          creationDate: "2000-01-23T04:56:07.000+00:00"
          '@schemaLocation': "http://example.com/aeiou"
          granter:
            '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          user:
            '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  PermissionCreateEventPayload:
    type: "object"
    properties:
      permission:
        description: "The involved resource data for the event"
        $ref: "#/definitions/Permission"
    description: "The event data structure"
    example:
      permission:
        assetUserRole:
        - manageableAsset:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          '@type': "@type"
          userRole:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        - manageableAsset:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          '@type': "@type"
          userRole:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        description: "description"
        id: "id"
        href: "href"
        privilege:
        - manageableAsset:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          '@type': "@type"
          function: "function"
          action: "action"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
        - manageableAsset:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          '@type': "@type"
          function: "function"
          action: "action"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
        creationDate: "2000-01-23T04:56:07.000+00:00"
        '@schemaLocation': "http://example.com/aeiou"
        granter:
          '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        user:
          '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
  PermissionAttributeValueChangeEvent:
    type: "object"
    properties:
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
      fieldPath:
        type: "string"
        description: "The path identifying the object field concerned by this notification."
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/PermissionAttributeValueChangeEventPayload"
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      fieldPath: "fieldPath"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      title: "title"
      priority: "priority"
      event:
        permission:
          assetUserRole:
          - manageableAsset:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            '@baseType': "@baseType"
            '@type': "@type"
            userRole:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          - manageableAsset:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            '@baseType': "@baseType"
            '@type': "@type"
            userRole:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "description"
          id: "id"
          href: "href"
          privilege:
          - manageableAsset:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            '@baseType': "@baseType"
            '@type': "@type"
            function: "function"
            action: "action"
            id: "id"
            '@schemaLocation': "http://example.com/aeiou"
          - manageableAsset:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            '@baseType': "@baseType"
            '@type': "@type"
            function: "function"
            action: "action"
            id: "id"
            '@schemaLocation': "http://example.com/aeiou"
          creationDate: "2000-01-23T04:56:07.000+00:00"
          '@schemaLocation': "http://example.com/aeiou"
          granter:
            '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          user:
            '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  PermissionAttributeValueChangeEventPayload:
    type: "object"
    properties:
      permission:
        description: "The involved resource data for the event"
        $ref: "#/definitions/Permission"
    description: "The event data structure"
    example:
      permission:
        assetUserRole:
        - manageableAsset:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          '@type': "@type"
          userRole:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        - manageableAsset:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          '@type': "@type"
          userRole:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        description: "description"
        id: "id"
        href: "href"
        privilege:
        - manageableAsset:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          '@type': "@type"
          function: "function"
          action: "action"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
        - manageableAsset:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          '@type': "@type"
          function: "function"
          action: "action"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
        creationDate: "2000-01-23T04:56:07.000+00:00"
        '@schemaLocation': "http://example.com/aeiou"
        granter:
          '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        user:
          '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
  PermissionStateChangeEvent:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Identifier of the Process flow"
      href:
        type: "string"
        description: "Reference of the ProcessFlow"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/PermissionStateChangeEventPayload"
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      id: "id"
      href: "href"
      eventType: "eventType"
      title: "title"
      priority: "priority"
      event:
        permission:
          assetUserRole:
          - manageableAsset:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            '@baseType': "@baseType"
            '@type': "@type"
            userRole:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          - manageableAsset:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            '@baseType': "@baseType"
            '@type': "@type"
            userRole:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "description"
          id: "id"
          href: "href"
          privilege:
          - manageableAsset:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            '@baseType': "@baseType"
            '@type': "@type"
            function: "function"
            action: "action"
            id: "id"
            '@schemaLocation': "http://example.com/aeiou"
          - manageableAsset:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            '@baseType': "@baseType"
            '@type': "@type"
            function: "function"
            action: "action"
            id: "id"
            '@schemaLocation': "http://example.com/aeiou"
          creationDate: "2000-01-23T04:56:07.000+00:00"
          '@schemaLocation': "http://example.com/aeiou"
          granter:
            '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          user:
            '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  PermissionStateChangeEventPayload:
    type: "object"
    properties:
      permission:
        description: "The involved resource data for the event"
        $ref: "#/definitions/Permission"
    description: "The event data structure"
    example:
      permission:
        assetUserRole:
        - manageableAsset:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          '@type': "@type"
          userRole:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        - manageableAsset:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          '@type': "@type"
          userRole:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        description: "description"
        id: "id"
        href: "href"
        privilege:
        - manageableAsset:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          '@type': "@type"
          function: "function"
          action: "action"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
        - manageableAsset:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          '@type': "@type"
          function: "function"
          action: "action"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
        creationDate: "2000-01-23T04:56:07.000+00:00"
        '@schemaLocation': "http://example.com/aeiou"
        granter:
          '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        user:
          '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
  PermissionDeleteEvent:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Identifier of the Process flow"
      href:
        type: "string"
        description: "Reference of the ProcessFlow"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/PermissionDeleteEventPayload"
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      id: "id"
      href: "href"
      eventType: "eventType"
      title: "title"
      priority: "priority"
      event:
        permission:
          assetUserRole:
          - manageableAsset:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            '@baseType': "@baseType"
            '@type': "@type"
            userRole:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          - manageableAsset:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            '@baseType': "@baseType"
            '@type': "@type"
            userRole:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "description"
          id: "id"
          href: "href"
          privilege:
          - manageableAsset:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            '@baseType': "@baseType"
            '@type': "@type"
            function: "function"
            action: "action"
            id: "id"
            '@schemaLocation': "http://example.com/aeiou"
          - manageableAsset:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            '@baseType': "@baseType"
            '@type': "@type"
            function: "function"
            action: "action"
            id: "id"
            '@schemaLocation': "http://example.com/aeiou"
          creationDate: "2000-01-23T04:56:07.000+00:00"
          '@schemaLocation': "http://example.com/aeiou"
          granter:
            '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          user:
            '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  PermissionDeleteEventPayload:
    type: "object"
    properties:
      permission:
        description: "The involved resource data for the event"
        $ref: "#/definitions/Permission"
    description: "The event data structure"
    example:
      permission:
        assetUserRole:
        - manageableAsset:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          '@type': "@type"
          userRole:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        - manageableAsset:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          '@type': "@type"
          userRole:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        description: "description"
        id: "id"
        href: "href"
        privilege:
        - manageableAsset:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          '@type': "@type"
          function: "function"
          action: "action"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
        - manageableAsset:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          '@type': "@type"
          function: "function"
          action: "action"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
        creationDate: "2000-01-23T04:56:07.000+00:00"
        '@schemaLocation': "http://example.com/aeiou"
        granter:
          '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        user:
          '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
  UserRoleCreateEvent:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Identifier of the Process flow"
      href:
        type: "string"
        description: "Reference of the ProcessFlow"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/UserRoleCreateEventPayload"
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      id: "id"
      href: "href"
      eventType: "eventType"
      title: "title"
      priority: "priority"
      event:
        userRole:
          involvementRole: "involvementRole"
          '@baseType': "@baseType"
          '@type': "@type"
          entitlement:
          - '@baseType': "@baseType"
            '@type': "@type"
            function: "function"
            action: "action"
            id: "id"
            '@schemaLocation': "http://example.com/aeiou"
          - '@baseType': "@baseType"
            '@type': "@type"
            function: "function"
            action: "action"
            id: "id"
            '@schemaLocation': "http://example.com/aeiou"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  UserRoleCreateEventPayload:
    type: "object"
    properties:
      userRole:
        description: "The involved resource data for the event"
        $ref: "#/definitions/UserRole"
    description: "The event data structure"
    example:
      userRole:
        involvementRole: "involvementRole"
        '@baseType': "@baseType"
        '@type': "@type"
        entitlement:
        - '@baseType': "@baseType"
          '@type': "@type"
          function: "function"
          action: "action"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
        - '@baseType': "@baseType"
          '@type': "@type"
          function: "function"
          action: "action"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
  UserRoleAttributeValueChangeEvent:
    type: "object"
    properties:
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
      fieldPath:
        type: "string"
        description: "The path identifying the object field concerned by this notification."
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/UserRoleAttributeValueChangeEventPayload"
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      fieldPath: "fieldPath"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      title: "title"
      priority: "priority"
      event:
        userRole:
          involvementRole: "involvementRole"
          '@baseType': "@baseType"
          '@type': "@type"
          entitlement:
          - '@baseType': "@baseType"
            '@type': "@type"
            function: "function"
            action: "action"
            id: "id"
            '@schemaLocation': "http://example.com/aeiou"
          - '@baseType': "@baseType"
            '@type': "@type"
            function: "function"
            action: "action"
            id: "id"
            '@schemaLocation': "http://example.com/aeiou"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  UserRoleAttributeValueChangeEventPayload:
    type: "object"
    properties:
      userRole:
        description: "The involved resource data for the event"
        $ref: "#/definitions/UserRole"
    description: "The event data structure"
    example:
      userRole:
        involvementRole: "involvementRole"
        '@baseType': "@baseType"
        '@type': "@type"
        entitlement:
        - '@baseType': "@baseType"
          '@type': "@type"
          function: "function"
          action: "action"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
        - '@baseType': "@baseType"
          '@type': "@type"
          function: "function"
          action: "action"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
  UserRoleStateChangeEvent:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Identifier of the Process flow"
      href:
        type: "string"
        description: "Reference of the ProcessFlow"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/UserRoleStateChangeEventPayload"
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      id: "id"
      href: "href"
      eventType: "eventType"
      title: "title"
      priority: "priority"
      event:
        userRole:
          involvementRole: "involvementRole"
          '@baseType': "@baseType"
          '@type': "@type"
          entitlement:
          - '@baseType': "@baseType"
            '@type': "@type"
            function: "function"
            action: "action"
            id: "id"
            '@schemaLocation': "http://example.com/aeiou"
          - '@baseType': "@baseType"
            '@type': "@type"
            function: "function"
            action: "action"
            id: "id"
            '@schemaLocation': "http://example.com/aeiou"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  UserRoleStateChangeEventPayload:
    type: "object"
    properties:
      userRole:
        description: "The involved resource data for the event"
        $ref: "#/definitions/UserRole"
    description: "The event data structure"
    example:
      userRole:
        involvementRole: "involvementRole"
        '@baseType': "@baseType"
        '@type': "@type"
        entitlement:
        - '@baseType': "@baseType"
          '@type': "@type"
          function: "function"
          action: "action"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
        - '@baseType': "@baseType"
          '@type': "@type"
          function: "function"
          action: "action"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
  UserRoleDeleteEvent:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Identifier of the Process flow"
      href:
        type: "string"
        description: "Reference of the ProcessFlow"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/UserRoleDeleteEventPayload"
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      id: "id"
      href: "href"
      eventType: "eventType"
      title: "title"
      priority: "priority"
      event:
        userRole:
          involvementRole: "involvementRole"
          '@baseType': "@baseType"
          '@type': "@type"
          entitlement:
          - '@baseType': "@baseType"
            '@type': "@type"
            function: "function"
            action: "action"
            id: "id"
            '@schemaLocation': "http://example.com/aeiou"
          - '@baseType': "@baseType"
            '@type': "@type"
            function: "function"
            action: "action"
            id: "id"
            '@schemaLocation': "http://example.com/aeiou"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  UserRoleDeleteEventPayload:
    type: "object"
    properties:
      userRole:
        description: "The involved resource data for the event"
        $ref: "#/definitions/UserRole"
    description: "The event data structure"
    example:
      userRole:
        involvementRole: "involvementRole"
        '@baseType': "@baseType"
        '@type': "@type"
        entitlement:
        - '@baseType': "@baseType"
          '@type': "@type"
          function: "function"
          action: "action"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
        - '@baseType': "@baseType"
          '@type': "@type"
          function: "function"
          action: "action"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
  Error:
    type: "object"
    required:
    - "code"
    - "reason"
    properties:
      code:
        type: "string"
        description: "Application relevant detail, defined in the API or a common\
          \ list."
      reason:
        type: "string"
        description: "Explanation of the reason for the error which can be shown to\
          \ a client user."
      message:
        type: "string"
        description: "More details and corrective actions related to the error which\
          \ can be shown to a client user."
      status:
        type: "string"
        description: "HTTP Error code extension"
      referenceError:
        type: "string"
        format: "uri"
        description: "URI of documentation describing the error."
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class."
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name."
    description: "Used when an API throws an Error, typically with a HTTP error response-code\
      \ (3xx, 4xx, 5xx)"
